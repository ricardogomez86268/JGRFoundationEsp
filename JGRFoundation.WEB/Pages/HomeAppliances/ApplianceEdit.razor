@page "/homeAppliances/edit/{ApplianceId:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]

<h3>Editar Electrodomestico</h3>

@if (appliance is null)
{
    <p>Cargando...</p>
}
else
{
    <ApplianceForm @ref="applianceForm" Appliance="appliance" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Appliance? appliance;
    private ApplianceForm? applianceForm;

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter]
    public int ApplianceId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHTTP = await repository.Get<Appliance>($"api/homeAppliances/{ApplianceId}");
        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("homeAppliances");
                return;
            }
            var messageError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            return;
        }
        appliance = responseHTTP.Response;
    }

    private async Task EditAsync()
    {
        var responseHTTP = await repository.Put("api/homeAppliances", appliance);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            return;
        }
        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
        {
            Toast = true,
            Position = SweetAlertPosition.TopEnd,
            ShowConfirmButton = false,
            Timer = 5000
        });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Electrodomestico modificado con éxito.");
    }

    private void Return()
    {
        applianceForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("homeAppliances");
    }
}